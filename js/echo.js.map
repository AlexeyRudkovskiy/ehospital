{"version":3,"sources":["echo.ts"],"names":[],"mappings":"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","file":"echo.js","sourcesContent":["import echoListeners from \"./echo/routes\"\n\ninterface IEchoConfig {\n\n    port?:number;\n\n    host?:string;\n\n}\n\nclass Echo {\n\n    private config:IEchoConfig;\n\n    private connection:any;\n\n    private callbacks = {};\n\n    private messagesCount:number = 0;\n\n    constructor (config:IEchoConfig = null) {\n        this.config = config || {\n            port: 5888,\n            host: 'localhost'\n        };\n    }\n\n    public connect() {\n        this.connection = (window as any).io.connect(this.config.host + ':' + this.config.port);\n        this.connection.on('connect', this.onConnected.bind(this));\n        this.connection.on('message', this.onMessage.bind(this));\n    }\n\n    public onConnected () {\n        console.log('Successfully connected to ' + this.config.host + ':' + this.config.port);\n\n        this.connection.emit('register', {\n            id: (window as any).user.id\n        });\n\n        console.log('[ECHO] Registered width id ' + (window as any).user.id);\n\n        this.bootstrap();\n    }\n\n    public onMessage (message) {\n        let key = message.channel;\n        let messageContainer = message.message;\n\n        this.messagesCount++;\n        console.log('[ECHO] New message with local number ' + this.messagesCount, message);\n\n        try {\n            if (typeof this.callbacks[key] !== \"undefined\") {\n                console.log(\"[ECHO] Listeners for message #\" + this.messagesCount, this.callbacks[key].length);\n                this.callbacks[key].forEach(callback => {\n                    callback.call(window, messageContainer.data)\n                });\n            } else {\n                console.log('No any callbacks for channel \"', key, '\"', messageContainer);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    public subscribe (key:string, callback:any) {\n        if (typeof this.callbacks[key] === \"undefined\") {\n            this.callbacks[key] = [];\n        }\n\n        this.callbacks[key].push(callback);\n    }\n\n    public bootstrap () {\n        for (let event in echoListeners) {\n            for (let i = 0; i < echoListeners[event].length; i++) {\n                this.subscribe(event, echoListeners[event][i]);\n            }\n        }\n    }\n\n}\n\nlet echo:Echo = new Echo();\n\nexport default echo;"]}