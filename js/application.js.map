{"version":3,"sources":["application.ts"],"names":[],"mappings":"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","file":"application.js","sourcesContent":["import OffscreenViewTestZone from \"./ui/offscreen-view-test-zone\"\n\nclass Application {\n\n    private loaded:boolean = false;\n\n    private _offscreenViewTestZone:OffscreenViewTestZone = null;\n\n    onLoadedEvents:any[] = [];\n\n    onFirstLoadedEvents:any[] = [];\n\n    onResizeEvents:any[] = [];\n\n    emmitable:any = {};\n\n    constructor() {\n        this._offscreenViewTestZone = new OffscreenViewTestZone('#offscreen-test-view-zone');\n    }\n\n    addOnLoadEvent(callback:any) : Application {\n        if (typeof callback !== \"function\") {\n            throw \"callback should be closure\";\n        }\n\n        this.onLoadedEvents.push(callback);\n        return this;\n    }\n\n    addOnFirstLoadedEvent(callback:any) : Application {\n        if (typeof callback !== \"function\") {\n            throw \"callback should be closure\";\n        }\n\n        this.onFirstLoadedEvents.push(callback);\n        return this;\n    }\n\n    addOnResizeEvent(callback:any) : Application {\n        if (typeof callback !== \"function\") {\n            throw \"callback should be closure\";\n        }\n\n        this.onResizeEvents.push(callback);\n        return this;\n    }\n\n    addEmmitable (key:string, callback:any) {\n        if (typeof this.emmitable[key] === \"undefined\") {\n            this.emmitable[key] = [];\n        }\n\n        this.emmitable[key].push(callback);\n    }\n\n    callOnLoadedEvents() : Application {\n        this.onLoadedEvents.forEach(callback => callback.apply(window));\n\n        if (!this.loaded) {\n            this.onFirstLoadedEvents.forEach(callback => callback.apply(window));\n        }\n\n        this.loaded = true;\n        return this;\n    }\n\n    callOnResizeEvents() : Application {\n        this.onResizeEvents.forEach(callback => callback.apply(window));\n\n        return this;\n    }\n\n    callEmmitable (key:string) {\n        if (typeof this.emmitable[key] === \"undefined\") {\n            throw {\n                message: \"Emmitabled callbacks not found\",\n                key: key\n            };\n        }\n\n        this.emmitable[key].forEach(callback => callback.apply(window));\n    }\n\n    get offscreenViewTestZone(): OffscreenViewTestZone {\n        return this._offscreenViewTestZone;\n    }\n}\n\nconst app:Application = new Application();\n\nexport default app;\n"]}